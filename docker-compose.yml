version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ''  # Consider setting a secure password for production
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_DATABASE: foyer
    command: --init-file /docker-entrypoint-initdb.d/init.sql  # Add init script to create sonar database
    ports:
      - "3306:3306"
    networks:
      - my_network
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount the init script
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  springboot:
    image: montahajaballah/montahabenjaballah_bugbusters_foyer:latest
    container_name: springboot
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/foyer?createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ''
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_PORT: 8089
      SERVER_SERVLET_CONTEXT_PATH: /foyer
      LOGGING_LEVEL_COM_ZAXXER_HIKARI: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: DEBUG
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_PATTERN_CONSOLE: "%d{yyyy-MM-dd HH:mm:ss} - %-5level - %logger{60} - %msg%n"
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_TRANSACTION: DEBUG
      LOGGING_LEVEL_ORG_HIBERNATE_ENGINE_TRANSACTION: DEBUG
      LOGGING_LEVEL_ORG_HIBERNATE_SQL: DEBUG
      LOGGING_LEVEL_ORG_HIBERNATE_TYPE_DESCRIPTOR_SQL_BASICBINDER: TRACE
    ports:
      - "8089:8089"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - my_network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8089/foyer/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    environment:
      SONAR_JDBC_URL: jdbc:mysql://mysql:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true
      SONAR_JDBC_USERNAME: root
      SONAR_JDBC_PASSWORD: ''
    ports:
      - "9000:9000"
    networks:
      - my_network
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    depends_on:
      mysql:
        condition: service_healthy
    restart: always

networks:
  my_network:
    driver: bridge

volumes:
  mysql-data:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions: